{"version":3,"sources":["components/InfoBox.js","components/Map.js","components/StatTable.js","utils/util.js","components/AllInfoTable.js","components/LineGraph.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","infoBox","flex","cursor","infoBoxSelected","borderTop","infoBoxCases","color","fontWeight","fontSize","marginTop","infoBoxRecovered","infoBoxDeaths","infoBoxTitleCases","infoBoxTitleRecovered","infoBoxTitleDeaths","infoBoxTotal","InfoBox","active","title","cases","total","props","classes","Card","onClick","className","CardContent","Typography","align","variant","map","height","backgroundColor","padding","borderRadius","infoContainer","width","infoFlag","backgroundSize","marginBottom","infoName","infosCases","infosRecovered","infosDeaths","casesTypeColors","hex","multiplier","recovered","deaths","Map","countries","casesType","center","zoom","style","TileLayer","attribution","url","data","country","i","Circle","key","countryInfo","lat","long","fillOpacity","fillColor","radius","Math","sqrt","Popup","backgroundImage","flag","numeral","format","showDataOnMap","root","container","maxHeight","table","minWidth","StyledTableCell","withStyles","theme","head","body","TableCell","StatTable","useState","page","setPage","rowsPerPage","setRowsPerPage","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableBody","slice","row","component","scope","tests","critical","population","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","value","sortData","sort","a","b","prettyPrintStat","stat","AllInfoTable","size","todayCases","todayDeaths","todayRecovered","graphTitle","options","legend","display","elements","points","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","setData","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","useEffect","fetch","then","response","json","fetchData","gutterBottom","datasets","card","Sidebar","labels","hoverBackgroundColor","flexDirection","minHeight","backdrop","zIndex","drawer","spacing","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","formControl","margin","header","cardGrid","paddingTop","paddingBottom","cardContent","tableTitle","footer","grey","modal","position","background","paper","border","boxShadow","shadows","getModalStyle","top","left","transform","BootstrapInput","input","transition","transitions","create","fontFamily","join","InputBase","Copyright","Link","href","interval","ticking","App","loading","setLoading","setCountries","setCountry","countryName","setCountryName","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","mapCountries","setMapCountries","setCasesType","modalStyle","openModal","setOpenModal","getAllData","console","log","countriesData","c","name","iso2","tag","iso3","sortedData","getCountriesData","handleCountryChange","countryCode","CssBaseline","Modal","open","onClose","aria-labelledby","aria-describedby","id","Backdrop","CircularProgress","AppBar","elevation","Toolbar","noWrap","FormControl","Select","onChange","autoWidth","MenuItem","Container","maxWidth","Grid","item","lg","xs","md","e","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ff5ba940.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  infoBox: {\r\n    flex: 1,\r\n    cursor: \"pointer\",\r\n  },\r\n  infoBoxSelected: {\r\n    borderTop: \"5px solid #3f51b5\",\r\n  },\r\n  infoBoxCases: {\r\n    color: \"#008ffb\",\r\n    fontWeight: 600,\r\n    fontSize: 28,\r\n    marginTop: 5,\r\n  },\r\n  infoBoxRecovered: {\r\n    color: \"#00e396\",\r\n    fontWeight: 600,\r\n    fontSize: 28,\r\n    marginTop: 5,\r\n  },\r\n  infoBoxDeaths: {\r\n    color: \"#feb019\",\r\n    fontWeight: 600,\r\n    fontSize: 28,\r\n    marginTop: 5,\r\n  },\r\n  infoBoxTitleCases: {\r\n    color: \"#008ffb\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  infoBoxTitleRecovered: {\r\n    color: \"#00e396\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  infoBoxTitleDeaths: {\r\n    color: \"#feb019\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  infoBoxTotal: {\r\n    color: \"#05386B\",\r\n    fontWeight: 700,\r\n    fontSize: 16,\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nfunction InfoBox({ active, title, cases, total, ...props }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`${classes.infoBox} ${active && classes.infoBoxSelected}\r\n      }`}\r\n    >\r\n      <CardContent>\r\n        <Typography\r\n          className={\r\n            title === \"Cases\"\r\n              ? classes.infoBoxTitleCases\r\n              : title === \"Recovered\"\r\n              ? classes.infoBoxTitleRecovered\r\n              : classes.infoBoxTitleDeaths\r\n          }\r\n          align=\"center\"\r\n          variant=\"h5\"\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <Typography\r\n          className={\r\n            title === \"Cases\"\r\n              ? classes.infoBoxCases\r\n              : title === \"Recovered\"\r\n              ? classes.infoBoxRecovered\r\n              : classes.infoBoxDeaths\r\n          }\r\n          align=\"center\"\r\n          variant=\"h2\"\r\n        >\r\n          {cases} Daily\r\n        </Typography>\r\n        <Typography className={classes.infoBoxTotal}>{total} Total</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Map as LeafletMap, TileLayer, Circle, Popup } from \"react-leaflet\";\r\nimport numeral from \"numeral\";\r\n\r\nconst useStyles = makeStyles({\r\n  map: {\r\n    height: 500,\r\n    backgroundColor: \"rgba(26, 26, 29, 0.85)\",\r\n    padding: 2,\r\n    borderRadius: 5,\r\n  },\r\n  infoContainer: {\r\n    width: 150,\r\n  },\r\n  infoFlag: {\r\n    height: 100,\r\n    width: \"100%\",\r\n    backgroundSize: \"cover\",\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  infoName: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"#1A1A1D\",\r\n  },\r\n  infosCases: {\r\n    fontSize: 16,\r\n    marginTop: 5,\r\n    color: \"#008ffb\",\r\n  },\r\n  infosRecovered: {\r\n    fontSize: 16,\r\n    marginTop: 5,\r\n    color: \"#00e396\",\r\n  },\r\n  infosDeaths: {\r\n    fontSize: 16,\r\n    marginTop: 5,\r\n    color: \"#feb019\",\r\n  },\r\n});\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#008ffb\",\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: \"#00e396\",\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: \"#feb019\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  const classes = useStyles();\r\n\r\n  const showDataOnMap = (data, casesType = \"cases\") =>\r\n    data.map((country, i) => (\r\n      <Circle\r\n        key={i}\r\n        center={[country.countryInfo.lat, country.countryInfo.long]}\r\n        fillOpacity={0.4}\r\n        color={casesTypeColors[casesType].hex}\r\n        fillColor={casesTypeColors[casesType].hex}\r\n        radius={\r\n          Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n        }\r\n      >\r\n        <Popup>\r\n          <div className={classes.infoContainer}>\r\n            <div\r\n              className={classes.infoFlag}\r\n              style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n            />\r\n            <div className={classes.infoName}>{country.country}</div>\r\n            <div className={classes.infosCases}>\r\n              Cases: {numeral(country.cases).format(\"0,0\")}\r\n            </div>\r\n            <div className={classes.infosRecovered}>\r\n              Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n            </div>\r\n            <div className={classes.infosDeaths}>\r\n              Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n            </div>\r\n          </div>\r\n        </Popup>\r\n      </Circle>\r\n    ));\r\n\r\n  return (\r\n    <div className={classes.map}>\r\n      <LeafletMap center={center} zoom={zoom} style={{ height: \"100%\" }}>\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState } from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    color: \"#6F2232\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    color: \"#05386B\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}))(TableCell);\r\n\r\nfunction StatTable({ countries }) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader className={classes.table} aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Country</StyledTableCell>\r\n              <StyledTableCell>Cases</StyledTableCell>\r\n              <StyledTableCell>Recovered</StyledTableCell>\r\n              <StyledTableCell>Deaths</StyledTableCell>\r\n              <StyledTableCell>Tests</StyledTableCell>\r\n              <StyledTableCell>Active</StyledTableCell>\r\n              <StyledTableCell>Critical</StyledTableCell>\r\n              <StyledTableCell>Population</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {countries\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, i) => (\r\n                <TableRow key={i}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.country}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>\r\n                    {numeral(row.cases).format(\"0,0\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>\r\n                    {numeral(row.recovered).format(\"0,0\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>\r\n                    {numeral(row.deaths).format(\"0,0\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>\r\n                    {numeral(row.tests).format(\"0,0\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>\r\n                    {numeral(row.active).format(\"0,0\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>\r\n                    {numeral(row.critical).format(\"0,0\")}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>\r\n                    {numeral(row.population).format(\"0,0\")}\r\n                  </StyledTableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={countries.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default StatTable;\r\n","import numeral from \"numeral\";\r\n\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n  return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `${numeral(stat).format(\"0,0\")}` : \"0\";\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { prettyPrintStat } from \"../utils/util\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 350,\r\n  },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  body: {\r\n    fontSize: 14,\r\n    color: \"#05386B\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}))(TableCell);\r\n\r\nexport default function AllInfoTable({ countryInfo }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableBody>\r\n          <TableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              Population\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {prettyPrintStat(countryInfo.population)}\r\n            </StyledTableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              Tests\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {prettyPrintStat(countryInfo.tests)}\r\n            </StyledTableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              Cases\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {prettyPrintStat(countryInfo.cases)}\r\n            </StyledTableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              Active\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {prettyPrintStat(countryInfo.active)}\r\n            </StyledTableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              Recovered\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {prettyPrintStat(countryInfo.recovered)}\r\n            </StyledTableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              Critical\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {prettyPrintStat(countryInfo.critical)}\r\n            </StyledTableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              Deaths\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {prettyPrintStat(countryInfo.deaths)}\r\n            </StyledTableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              Today Cases\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {prettyPrintStat(countryInfo.todayCases)}\r\n            </StyledTableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              Toay Deaths\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {prettyPrintStat(countryInfo.todayDeaths)}\r\n            </StyledTableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              Today Recored\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">\r\n              {prettyPrintStat(countryInfo.todayRecovered)}\r\n            </StyledTableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport numeral from \"numeral\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  graphTitle: {\r\n    color: \"#C3073F\",\r\n  },\r\n}));\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    points: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nfunction LineGraph({ casesType = \"cases\" }) {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({});\r\n\r\n  const buildChartData = (data, casesType) => {\r\n    let chartData = [];\r\n    let lastDataPoint;\r\n    for (let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint = {\r\n          x: date,\r\n          y: data[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[casesType][date];\r\n    }\r\n    return chartData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n        component=\"h3\"\r\n        className={classes.graphTitle}\r\n      >\r\n        Worldwide last 120 days {casesType}\r\n      </Typography>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          options={options}\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor:\r\n                  casesType === \"cases\"\r\n                    ? \"rgba(0, 143, 251, 0.85)\"\r\n                    : casesType === \"recovered\"\r\n                    ? \"rgba(0, 227, 150, 0.85)\"\r\n                    : \"rgba(254, 176, 25, 0.85)\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    marginBottom: 30,\r\n  },\r\n});\r\n\r\nfunction Sidebar({ title, cases, recovered, deaths }) {\r\n  const classes = useStyles();\r\n\r\n  const data = {\r\n    labels: [\"Cases\", \"Recovered\", \"Deaths\"],\r\n    datasets: [\r\n      {\r\n        data: [cases, recovered, deaths],\r\n        backgroundColor: [\"#008ffb\", \"#00e396\", \"#feb019\"],\r\n        hoverBackgroundColor: [\"#008ffb\", \"#00e396\", \"#feb019\"],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          {title}\r\n        </Typography>\r\n        <Doughnut data={data} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react'\nimport {\n  Container,\n  CssBaseline,\n  AppBar,\n  Toolbar,\n  Backdrop,\n  CircularProgress,\n  Grid,\n  Link,\n  Typography,\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from '@material-ui/core'\nimport Modal from '@material-ui/core/Modal'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport InputBase from '@material-ui/core/InputBase'\nimport Clock from 'react-live-clock'\nimport InfoBox from './components/InfoBox'\nimport Map from './components/Map'\nimport StatTable from './components/StatTable'\nimport AllInfoTable from './components/AllInfoTable'\nimport LineGraph from './components/LineGraph'\nimport Sidebar from './components/Sidebar'\nimport { sortData, prettyPrintStat } from './utils/util'\nimport './css/App.css'\nimport 'leaflet/dist/leaflet.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n  container: {\n    marginBottom: theme.spacing(2),\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  header: {\n    marginTop: 30,\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  tableTitle: {\n    color: '#C3073F',\n  },\n  graphTitle: {\n    color: '#C3073F',\n  },\n  footer: {\n    padding: theme.spacing(1),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n  modal: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #05386B',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    color: '#05386B',\n  },\n}))\n\nconst getModalStyle = () => {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  }\n}\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 5,\n    position: 'relative',\n    color: '#ffffff',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    fontFamily: ['Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif'].join(','),\n    '&:focus': {\n      borderRadius: 5,\n      backgroundColor: 'primary',\n    },\n  },\n}))(InputBase)\n\nconst Copyright = () => {\n  return (\n    <Typography variant='body2' color='textSecondary'>\n      <Link color='inherit' href='https://cagatayucer.com/'>\n        {'Copyright © Cagatay Ucer'}\n      </Link>{' '}\n      <Clock format={'DD.MM.YYYY'} interval={1000} ticking={true} />\n    </Typography>\n  )\n}\n\nfunction App() {\n  const classes = useStyles()\n  const [loading, setLoading] = useState(false)\n  const [countries, setCountries] = useState([])\n  const [country, setCountry] = useState('worldwide')\n  const [countryName, setCountryName] = useState('Worldwide')\n  const [countryInfo, setCountryInfo] = useState({})\n  const [tableData, setTableData] = useState([])\n  const [mapCenter, setMapCenter] = useState({ lat: 52, lng: 9 })\n  const [mapZoom] = useState(5)\n  const [mapCountries, setMapCountries] = useState([])\n  const [casesType, setCasesType] = useState('cases')\n  const [modalStyle] = useState(getModalStyle)\n  const [openModal, setOpenModal] = useState(false)\n\n  useEffect(() => {\n    const getAllData = async () => {\n      setLoading(true)\n      await fetch('https://disease.sh/v3/covid-19/all')\n        .then((response) => response.json())\n        .then((data) => {\n          setCountryInfo(data)\n        })\n      setLoading(false)\n    }\n    getAllData()\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      setLoading(true)\n      await fetch('https://disease.sh/v3/covid-19/countries')\n        .then((response) => response.json())\n        .then((data) => {\n          console.log('data', data)\n          const countriesData = data.map((c) => ({\n            name: c.country,\n            value: c.countryInfo.iso2,\n            tag: c.countryInfo.iso3,\n          }))\n\n          const sortedData = sortData(data)\n          setLoading(false)\n          setTableData(sortedData)\n          setMapCountries(data)\n          setCountries(countriesData)\n        })\n    }\n    getCountriesData()\n  }, [])\n\n  const handleCountryChange = async (event) => {\n    const countryCode = event.target.value\n\n    const url =\n      countryCode === 'worldwide'\n        ? 'https://disease.sh/v3/covid-19/all'\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n    setLoading(true)\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode)\n        setCountryName(countryCode === 'worldwide' ? 'Worldwide' : data.country)\n        setCountryInfo(data)\n        setMapCenter(\n          countryCode === 'worldwide'\n            ? [52, 9]\n            : [data.countryInfo.lat, data.countryInfo.long]\n        )\n\n        if (\n          data.todayCases === 0 &&\n          data.todayRecovered === 0 &&\n          data.todayDeaths === 0\n        ) {\n          setOpenModal(true)\n        }\n      })\n    setLoading(false)\n  }\n\n  const handleCloseLoading = () => {\n    setLoading(false)\n  }\n\n  const handleCloseModal = () => {\n    setOpenModal(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Modal\n        open={openModal}\n        onClose={handleCloseModal}\n        aria-labelledby='simple-modal-title'\n        aria-describedby='simple-modal-description'\n      >\n        <div style={modalStyle} className={classes.modal}>\n          <h2 id='simple-modal-title' color='primary'>\n            Please try again later!\n          </h2>\n          <p id='simple-modal-description'>\n            Daily cases have not publicly reported yet by officials.\n          </p>\n        </div>\n      </Modal>\n      <Backdrop\n        className={classes.backdrop}\n        open={loading}\n        onClick={handleCloseLoading}\n      >\n        <CircularProgress color='inherit' />\n      </Backdrop>\n\n      <AppBar position='static' elevation={0} className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            variant='h6'\n            color='inherit'\n            noWrap\n            className={classes.toolbarTitle}\n          >\n            Covid-19 Tracker\n          </Typography>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={country}\n              onChange={handleCountryChange}\n              autoWidth\n              input={<BootstrapInput />}\n            >\n              <MenuItem value='worldwide'>Worldwide</MenuItem>\n              {countries.map((country, i) => (\n                <MenuItem key={i} value={country.value}>\n                  {country.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Toolbar>\n      </AppBar>\n\n      <Container component='main' maxWidth='xl'>\n        <Grid container>\n          {/* LEFT */}\n          <Grid item lg={8}>\n            {/* INFOBOX */}\n            <Container\n              align='center'\n              className={classes.container}\n              maxWidth='lg'\n              component='main'\n            >\n              <Typography\n                className={classes.header}\n                align='center'\n                variant='h3'\n                color='primary'\n                gutterBottom\n              >\n                {countryName} Overview{' '}\n                <Clock format={'DD.MM.YYYY'} interval={1000} ticking={true} />\n              </Typography>\n\n              <Grid container spacing={4}>\n                <Grid item xs={12} md={4}>\n                  <InfoBox\n                    active={casesType === 'cases'}\n                    onClick={(e) => setCasesType('cases')}\n                    title='Cases'\n                    cases={prettyPrintStat(countryInfo.todayCases)}\n                    total={prettyPrintStat(countryInfo.cases)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <InfoBox\n                    active={casesType === 'recovered'}\n                    onClick={(e) => setCasesType('recovered')}\n                    title='Recovered'\n                    cases={prettyPrintStat(countryInfo.todayRecovered)}\n                    total={prettyPrintStat(countryInfo.recovered)}\n                  />\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <InfoBox\n                    active={casesType === 'deaths'}\n                    onClick={(e) => setCasesType('deaths')}\n                    title='Deaths'\n                    cases={prettyPrintStat(countryInfo.todayDeaths)}\n                    total={prettyPrintStat(countryInfo.deaths)}\n                  />\n                </Grid>\n              </Grid>\n            </Container>\n\n            {/* MAP */}\n            <Container\n              component='main'\n              className={classes.container}\n              maxWidth='lg'\n            >\n              <Card className={classes.card}>\n                <CardContent>\n                  <Typography\n                    className={classes.tableTitle}\n                    gutterBottom\n                    variant='h5'\n                    component='h3'\n                  >\n                    Click on a country for more info\n                  </Typography>\n                  <Map\n                    casesType={casesType}\n                    countries={mapCountries}\n                    center={mapCenter}\n                    zoom={mapZoom}\n                  />\n                </CardContent>\n              </Card>\n            </Container>\n          </Grid>\n\n          {/* RIGHT */}\n          <Grid item lg={4}>\n            <Container\n              component='main'\n              align='center'\n              className={classes.container}\n              maxWidth='lg'\n            >\n              <Typography\n                className={classes.header}\n                color='primary'\n                align='center'\n                variant='h3'\n                gutterBottom\n              >\n                Tables & Charts\n              </Typography>\n              <Sidebar\n                title={countryName + ' Daily'}\n                cases={countryInfo.todayCases}\n                recovered={countryInfo.todayRecovered}\n                deaths={countryInfo.todayDeaths}\n              />\n              <Card className={classes.card}>\n                <CardContent>\n                  <AllInfoTable countryInfo={countryInfo} />\n                </CardContent>\n              </Card>\n            </Container>\n          </Grid>\n        </Grid>\n      </Container>\n\n      {/* TABLE */}\n      <Container component='main' className={classes.container} maxWidth='xl'>\n        <Card className={classes.card}>\n          <CardContent>\n            <Typography\n              className={classes.tableTitle}\n              gutterBottom\n              variant='h5'\n              component='h3'\n            >\n              Live statistics\n            </Typography>\n            <StatTable countries={tableData} />\n          </CardContent>\n        </Card>\n      </Container>\n\n      {/* GRAPH */}\n      <Container component='main' className={classes.container} maxWidth='xl'>\n        <Grid container spacing={4}>\n          <Grid item xs={12} lg={4}>\n            <Card className={classes.card}>\n              <CardContent>\n                <LineGraph casesType={'cases'} />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} lg={4}>\n            <Card className={classes.card}>\n              <CardContent>\n                <LineGraph casesType={'recovered'} />\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} lg={4}>\n            <Card className={classes.card}>\n              <CardContent>\n                <LineGraph casesType={'deaths'} />\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <footer className={classes.footer}>\n        <Container maxWidth='sm'>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}